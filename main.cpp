#include <iostream>

 template<typename t>                           //какой тип данных будет храниться
class array                                     //описание класса
{
    t*self;                                     //указатель на динамический массив
    size_t size;                                //размер массива
public:
      template<class...init>                    //переменное число параметров для конструктора
     array(init...args):                        //конструктор с переменным числом параметров
        self(new t[sizeof...(init)]{args...}),  //параметры раскрываются и инициализируют выделенный массив
        size(sizeof...(init))                   //происходит подсчет аргументов и это число записывается как размер
    {}                                          //в конструкторе произошла только инициализация
    ~array()                                    //далее сразу деструктор
    {delete[]self;}                             //он удаляет массив

    void out()const                             //вывести содержимое массива в консоль
    {                                           //функция const потому что ничего не изменяет
        for(size_t i=0;i<size;i++)              //перебор по массиву (по порядку)
            std::cout<<i<<':'<<self[i]<<std::endl;
    }                                           //вывод номера и значения элемента
};

int main()
{array<int>(1,5,347,2).out();}
